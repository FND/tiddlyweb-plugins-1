
A store that uses Python's SQLAlchemy package to talk to a
database. This is an exploration. Lots of cleanup can be done.

You will need to install SQLAlchemy to use this plugin:

   easy_install -U sqlalchemy

There is a test included in this directory, but the proper way
to test this code is to run against the TiddlyWeb core test suite,
with tiddlywebconfig.py set as follows:

config = {
    # using sqlite
    'server_store': ['sql', {'db_config': 'sqlite:///test.db'}],
    # using mysql 
    #'server_store': ['sql',
    #    {'db_config': 'mysql://localhost/tw?charset=utf8'}],

}

db_config is a database uri as used in SQLAlchmey.

Some things are not yet supported:

* Efficiently handling the mapping between tiddlyweb.model objects
  and SQLAlchemy ways. Currently a great deal of redundancy.
  By switching from the declarative_base to explicit Mappers
  things could clean up nicely.
* Primary key handling is fairly icky. Probably want to move to ids,
  plus some unique index fields.
* Data normalization is not what I'd like.
* Attend to any unicode issues.

Issues:

* When running against the tests, the created tables need to be dropped
  between each test file.

The Future:

It's hoped that this will become a robust and efficient storage system
for TiddlyWeb. There is a great deal of room for improvement to the
code. Contributions are welcomed.
